{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/neelchoksi19bce0990/Documents/S/CLIENT-PROJECTS/1001/client-1-mom/pages/blog/[slug].js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Head from 'next/head';\nimport { getAllPosts } from '../../lib/data';\nimport { format, parseISO, add } from 'date-fns';\nimport renderToString from 'next-mdx-remote/render-to-string';\nimport hydrate from 'next-mdx-remote/hydrate';\nexport default function BlogPage({\n  title,\n  date,\n  content\n}) {\n  const hydratedContent = hydrate(content);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: [/*#__PURE__*/_jsxDEV(\"title\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"link\", {\n        rel: \"icon\",\n        href: \"/MomsOwnBlogLogo.jpg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"flex flex-col text-center justify-center \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-gradient-to-r from-blue-300 via-transparent to-gray-200 p-3 rounded-lg \",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-4xl font-bold\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-md font-medium\",\n          children: format(parseISO(date), 'MMMM do, uuuu')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-lg border-blue-500 border rounded-lg p-4 my-4 flex flex-col break-normal \",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"prose\",\n          children: hydratedContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n}\nexport async function getStaticProps(context) {\n  const {\n    params\n  } = context;\n  const allPosts = getAllPosts();\n  const {\n    data,\n    content\n  } = allPosts.find(item => item.slug === params.slug);\n  const mdxSource = await renderToString(content); // console.log(content)\n  // console.log(data)\n\n  return {\n    props: _objectSpread(_objectSpread({}, data), {}, {\n      data: data.date,\n      content: mdxSource\n    })\n  };\n}\nexport async function getStaticPaths() {\n  const allPosts = getAllPosts(); // console.log(allPosts);\n\n  return {\n    paths: allPosts.map(post => ({\n      params: {\n        slug: post.slug\n      }\n    })),\n    fallback: false\n  };\n}","map":{"version":3,"sources":["/home/neelchoksi19bce0990/Documents/S/CLIENT-PROJECTS/1001/client-1-mom/pages/blog/[slug].js"],"names":["Head","getAllPosts","format","parseISO","add","renderToString","hydrate","BlogPage","title","date","content","hydratedContent","getStaticProps","context","params","allPosts","data","find","item","slug","mdxSource","props","getStaticPaths","paths","map","post","fallback"],"mappings":";;;;;;;;;AAAA,OAAOA,IAAP,MAAiB,WAAjB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,GAA3B,QAAsC,UAAtC;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,OAAP,MAAoB,yBAApB;AAGA,eAAe,SAASC,QAAT,CAAkB;AAAEC,EAAAA,KAAF;AAASC,EAAAA,IAAT;AAAeC,EAAAA;AAAf,CAAlB,EAA4C;AACvD,QAAMC,eAAe,GAAGL,OAAO,CAACI,OAAD,CAA/B;AACA,sBACI;AAAA,4BACI,QAAC,IAAD;AAAA,8BACI;AAAA,kBAAQF;AAAR;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAM,QAAA,GAAG,EAAC,MAAV;AAAiB,QAAA,IAAI,EAAC;AAAtB;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKI;AAAM,MAAA,SAAS,EAAC,2CAAhB;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,4EAAf;AAAA,gCACI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA,oBACKA;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ,eAII;AAAG,UAAA,SAAS,EAAC,qBAAb;AAAA,oBAAoCN,MAAM,CAACC,QAAQ,CAACM,IAAD,CAAT,EAAiB,eAAjB;AAA1C;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAOI;AAAK,QAAA,SAAS,EAAC,gFAAf;AAAA,+BACI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,oBAAwBE;AAAxB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAqBH;AACD,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAaD,OAAnB;AACA,QAAME,QAAQ,GAAGd,WAAW,EAA5B;AACA,QAAM;AAAEe,IAAAA,IAAF;AAAQN,IAAAA;AAAR,MAAoBK,QAAQ,CAACE,IAAT,CAAeC,IAAD,IAAUA,IAAI,CAACC,IAAL,KAAcL,MAAM,CAACK,IAA7C,CAA1B;AACA,QAAMC,SAAS,GAAG,MAAMf,cAAc,CAACK,OAAD,CAAtC,CAJ0C,CAM1C;AACA;;AACA,SAAO;AACHW,IAAAA,KAAK,kCACEL,IADF;AAEDA,MAAAA,IAAI,EAAEA,IAAI,CAACP,IAFV;AAGDC,MAAAA,OAAO,EAAEU;AAHR;AADF,GAAP;AAQH;AACD,OAAO,eAAeE,cAAf,GAAgC;AACnC,QAAMP,QAAQ,GAAGd,WAAW,EAA5B,CADmC,CAEnC;;AACA,SAAO;AACHsB,IAAAA,KAAK,EAAER,QAAQ,CAACS,GAAT,CAAaC,IAAI,KAAK;AACzBX,MAAAA,MAAM,EAAE;AACJK,QAAAA,IAAI,EAAEM,IAAI,CAACN;AADP;AADiB,KAAL,CAAjB,CADJ;AAMHO,IAAAA,QAAQ,EAAE;AANP,GAAP;AAQH","sourcesContent":["import Head from 'next/head'\nimport { getAllPosts } from '../../lib/data';\nimport { format, parseISO, add } from 'date-fns';\nimport renderToString from 'next-mdx-remote/render-to-string'\nimport hydrate from 'next-mdx-remote/hydrate'\n\n\nexport default function BlogPage({ title, date, content }) {\n    const hydratedContent = hydrate(content);\n    return (\n        <div>\n            <Head>\n                <title>{title}</title>\n                <link rel=\"icon\" href=\"/MomsOwnBlogLogo.jpg\" />\n            </Head>\n            <main className=\"flex flex-col text-center justify-center \">\n                <div className=\"bg-gradient-to-r from-blue-300 via-transparent to-gray-200 p-3 rounded-lg \" >\n                    <h1 className=\"text-4xl font-bold\">\n                        {title}\n                    </h1>\n                    <p className=\"text-md font-medium\">{format(parseISO(date), 'MMMM do, uuuu')}</p>\n                </div>\n                <div className=\"text-lg border-blue-500 border rounded-lg p-4 my-4 flex flex-col break-normal \" >\n                    <div className=\"prose\">{hydratedContent}</div></div>\n\n            </main>\n\n\n        </div>\n    )\n}\nexport async function getStaticProps(context) {\n    const { params } = context;\n    const allPosts = getAllPosts();\n    const { data, content } = allPosts.find((item) => item.slug === params.slug);\n    const mdxSource = await renderToString(content);\n\n    // console.log(content)\n    // console.log(data)\n    return {\n        props: {\n            ...data,\n            data: data.date,\n            content: mdxSource,\n        },\n    };\n\n}\nexport async function getStaticPaths() {\n    const allPosts = getAllPosts();\n    // console.log(allPosts);\n    return {\n        paths: allPosts.map(post => ({\n            params: {\n                slug: post.slug,\n            }\n        })),\n        fallback: false\n    };\n}\n"]},"metadata":{},"sourceType":"module"}